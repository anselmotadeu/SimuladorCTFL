{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 2,
  "numPassedTests": 17,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 2,
  "numTotalTests": 17,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1747366781580,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747366782375,
        "runtime": 468,
        "slow": false,
        "start": 1747366781907
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/anselmo.filho/Documents/SimuladorCTFL/__tests__/timer.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() deve parar ao final do tempo",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve parar ao final do tempo"
        },
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() não deve lançar erro se display for null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "não deve lançar erro se display for null"
        },
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() deve exibir 00:08 corretamente",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve exibir 00:08 corretamente"
        },
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() deve renderizar 00:00 imediatamente para tempo 0",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve renderizar 00:00 imediatamente para tempo 0"
        },
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() deve renderizar 00:00 para tempo negativo",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve renderizar 00:00 para tempo negativo"
        },
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() deve garantir que apenas um timer esteja rodando",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve garantir que apenas um timer esteja rodando"
        },
        {
          "ancestorTitles": [
            "startTimer()"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "startTimer() deve clicar no botão de resposta ao finalizar o tempo",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve clicar no botão de resposta ao finalizar o tempo"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747366782425,
        "runtime": 29,
        "slow": false,
        "start": 1747366782396
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/anselmo.filho/Documents/SimuladorCTFL/__tests__/simulador.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve registrar acertos e erros corretamente",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "deve registrar acertos e erros corretamente"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve definir e retornar uma pergunta",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve definir e retornar uma pergunta"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve retornar undefined para índice inválido",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve retornar undefined para índice inválido"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve resetar todos os dados com resetState()",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "deve resetar todos os dados com resetState()"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve retornar undefined para índice inválido",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve retornar undefined para índice inválido"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve ignorar setQuestions com array vazio",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve ignorar setQuestions com array vazio"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve acumular acertos e erros corretamente",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "deve acumular acertos e erros corretamente"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve retornar undefined para índice negativo em getQuestion()",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "deve retornar undefined para índice negativo em getQuestion()"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve lançar erro ao passar valor não array para setQuestions()",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "deve lançar erro ao passar valor não array para setQuestions()"
        },
        {
          "ancestorTitles": [
            "simulador.js"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "simulador.js deve ignorar updateStats com valor indefinido ou nulo",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "deve ignorar updateStats com valor indefinido ou nulo"
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}